name: Build and Deploy read-product to EC2 from MAIN

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: latest

    steps:
      # Checkout the source code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build the Docker image with 'latest' tag
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/read-product:${{ env.IMAGE_TAG }} .

      # Push the image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/read-product:${{ env.IMAGE_TAG }}

      # Prepare SSH private key
      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem

      # Connect to EC2 and deploy the container using the image from Docker Hub
      - name: Deploy to EC2 using Docker image from Docker Hub (latest tag)
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e

            echo "ðŸ“¦ Deploying read-product using Docker Hub image (latest)..."

            # Install Docker if not already installed
            if ! command -v docker &> /dev/null; then
              echo "ðŸ›  Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            else
              echo "âœ… Docker is already installed."
            fi

            # Pull the latest 'main' image from Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/read-product:${{ env.IMAGE_TAG }}

            # Stop and remove any existing container
            sudo docker rm -f read-product || true

            # Run the container with environment variables and port mapping
            sudo docker run -d --name read-product \
              -p 4001:4001 \
              --restart always \
              -e MONGODB_URI=mongodb://52.21.72.12:27017 \
              -e DB_NAME=toyshop_db \
              -e PORT=4001 \
              ${{ secrets.DOCKER_USERNAME }}/read-product:${{ env.IMAGE_TAG }}

            echo "âœ… read-product deployed successfully (main)"
            sudo docker ps -a
          EOF